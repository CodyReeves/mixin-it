
// Base Animate Mixin Vars
// ==========================================================================

/// @name Animation Count
/// @group keyframe-config
/// @access public
/// @type Value
$animate-count-default: animate-value(count-default) !default;

/// @name Animation Duration
/// @group keyframe-config
/// @access public
/// @type Value
$animate-duration-default: animate-value(duration-default) !default;

/// @name Animation Delay
/// @group keyframe-config
/// @access public
/// @type Value
$animate-delay-default: animate-value(delay-default) !default;

/// @name Animation Count
/// @group keyframe-config
/// @access public
/// @type Value
$animate-function-default: animate-value(function-default) !default;

/// @name Animation Fill Mode
/// @group keyframe-config
/// @access public
/// @type Value
$animate-fill-default: animate-value(fill-default) !default;

/// @name Animation Visibility
/// @group keyframe-config
/// @access public
/// @type Value
$animate-visibility-default: animate-value(visibility-default) !default;

/// @name Anmation Play State
/// @group keyframe-config
/// @access public
/// @type Value
$animate-play-state-default: animate-value(play-state-default) !default;

/// @name Animation Direction
/// @group keyframe-config
/// @access public
/// @type Value
$animate-direction-default: animate-value(direction-default) !default;

// Maps Merge into $keyframe-global
// ==========================================================================

/// @name Create Global Keyframes
/// Builds a seperate map of keyframes that user wants compiled into classes
///
/// @group keyframe-config
/// @return {map} of all keyframes -> user spesified

$keyframes-custom: () !default;
$keyframe-global: ();

@function create-global-keyframe() {
  $return-value: ();

  // Get map, keys, and length of import
  $map: animate-value(import);
  $active-check-keys: map-keys($map);
  $length: length($active-check-keys);
  $count: 1;

  // Loop through each animation group
  @while $count <= $length {
    $get-active: map-deep-get($map, nth($active-check-keys, $count), active);

    // Check if the group is active
    @if $get-active == true {
      // Group active -> get keyframe names, and length of list
      $active-keyframes: map-deep-get($map, nth($active-check-keys, $count), animations);
      $length-1: length($active-keyframes);
      $count-1: 1;

      // Loop through each keyframe and add to global var to be returned
      @while $count-1 <= $length-1 {
        // Get key from global db map
        $key: list-to-string(nth($active-keyframes, $count-1));
        // Get value from global db map
        $merge-get: map-get(map-get($keyframes, keyframes), nth($active-keyframes, $count-1));

        $merge: (
          #{$key}: $merge-get
        );
        $return-value: map-merge($return-value, $merge);
        $count-1: $count-1 + 1;
      }
    }
    $count: $count + 1;
  }
  @return $return-value;
}

// Merges Custom Keyframes
$keyframe-global: create-global-keyframe();
$keyframe-global: map-merge($keyframe-global, $keyframes-custom);

// Export Keyframes
// ==========================================================================

/// @name Acivates active keyframes export
/// @group keyframe-config
/// @access public
/// @type Value
$create-keyframes: animate-value(create-keyframes) !default;

/// @name Acivates active keyframe/animation classes to export
/// @group keyframe-config
/// @access public
/// @type Map
$create-animation-library: animate-value(create-animation-library) !default;


// Transition Mixins
// ==========================================================================

/// @name Transition Prefix
/// @param {property} $transition - A string of properties
/// @outputs Transition properties

@mixin transition($transition...) {
  @include prefix(transition, $transition);
}

/// @name Transition Property Prefix
/// @param {property} $property - A string of properties
/// @outputs Transition-property properties

@mixin transition-property($property...) {
  @include prefix(transition-property, $property);
}

/// @name Transition Duration Prefix
/// @param {property} $duration - A string of properties
/// @outputs Transition-duration properties

@mixin transition-duration($duration...) {
  @include prefix(transition-duration, $duration);
}

/// @name Transition Timing Function Prefix
/// @param {property} $timing - A string of properties
/// @outputs Transition-timing-function properties

@mixin transition-timing-function($timing...) {
  @include prefix(transition-timing-function, $timing);
}

/// @name Transition Delay Prefix
/// @param {property} $delay - A string of properties
/// @outputs Transition-delay properties

@mixin transition-delay($delay...) {
  @include prefix(transition-delay, $delay);
}

// Transform Mixins
// ==========================================================================

/// @name Transform Prefix
/// @param {property} $transform - A string of properties
/// @outputs Transform properties

@mixin transform($transform...) {
  @include prefix(transform, $transform);
}

/// @name Transform Origin Prefix
/// @param {property} $transform-origin - A string of properties
/// @outputs Transform-origin properties

@mixin transform-origin($origin...) {
  @include prefix(transform-origin, $origin);
}

/// @name Transform Style Prefix
/// @param {property} $transform-origin - A string of properties
/// @outputs Transform-style properties

@mixin transform-style($transform-style: flat) {
  @include prefix(transform-style, $transform-style);
}

// Keyframes
// ==========================================================================

/// @name Keyframes Prefix
/// @param {property} $animation-name - A key
/// @content [keyframe properties and setp]
/// @outputs Keyframes prefixed

@mixin keyframes($animation-name) {
  @-webkit-keyframes #{$animation-name} {
    @content;
  }
  @-moz-keyframes #{$animation-name} {
    @content;
  }
  @-ms-keyframes #{$animation-name} {
    @content;
  }
  @-o-keyframes #{$animation-name} {
    @content;
  }
  @keyframes #{$animation-name} {
    @content;
  }
}

// Animation
// ==========================================================================

/// @name Animation Prefix
/// @param {property} $str - A string of properties
/// @outputs Animation prefixed

@mixin animation($str) {
  @include prefix(animation, $str);
}

/// @name Animation Count Prefix
/// @param {property} $count - A string of properties
/// @outputs Animation count prefixed

@mixin animation-count($count: 1) {
  @include prefix(animation-iteration-count, $count);
}

/// @name Animation Delay Prefix
/// @param {property} $delay - A string of properties
/// @outputs Animation Delay prefixed

@mixin animation-delay($delay: 0.2s) {
  @include prefix(animation-delay, $delay);
}

/// @name Animation Duration Prefix
/// @param {property} $duration - A string of properties
/// @outputs Animation Delay prefixed

@mixin animation-duration($duration: 1s) {
  @include prefix(animation-duration, $duration);
}

/// @name Animation Fill Mode Prefix
/// @param {property} $fill - A string of properties
/// @outputs Animation Delay prefixed

@mixin animation-fill-mode($fill: both) {
  @include prefix(animation-fill-mode, $fill);
}

/// @name Animation Name Prefix
/// @param {property} $name - A string of properties
/// @outputs Animation Delay prefixed

@mixin animation-name($name) {
  @include prefix(animation-name, $name);
}

/// @name Animation Timing Function Prefix
/// @param {property} $function - A string of properties
/// @outputs Animation Delay prefixed

@mixin animation-function($function: ease) {
  @include prefix(animation-timing-function, $function);
}

// Importing Base Mixns/Logic
// ==========================================================================

@import 'keyframe-creator';